Find the names of all reviewers who rated Gone with the Wind. 

Note: Your queries are executed using SQLite, so you must conform to the SQL constructs supported by SQLite. 

SELECT DISTINCT name
FROM Reviewer LEFT
NATURAL JOIN Movie LEFT
NATURAL JOIN Rating
WHERE rating.mid = 101 

----------------------------------------------------------------------------

For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars. 

SELECT name,
           title,
           stars
    FROM Reviewer LEFT
    NATURAL JOIN Movie LEFT
    NATURAL JOIN Rating WHERE director = name
    AND stars>0

----------------------------------------------------------------------------

Return all reviewer names and movie names together in a single list, alphabetized. (Sorting by the first name of the reviewer and first word in the title is fine; no need for special processing on last names or removing "The".) 

SELECT DISTINCT name
    FROM Reviewer
UNION
SELECT title
FROM Movie

----------------------------------------------------------------------------

Find the titles of all movies not reviewed by Chris Jackson. 

SELECT DISTINCT title
FROM Movie
EXCEPT
SELECT title
FROM Movie LEFT
NATURAL JOIN Rating LEFT
NATURAL JOIN reviewer
WHERE stars>0
    AND rid = 205
----------------------------------------------------------------------------

For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order. 

SELECT nm1,
           rev2.name
    FROM
        (SELECT rev1.name AS nm1,
                r2
         FROM
             (SELECT DISTINCT rat2.rid AS R2,
                              rat1.rid AS R1
              FROM rating Rat1,
                   rating Rat2
              WHERE rat1.mid=rat2.mid
                  AND rat1.rid<>rat2.rid)
         INNER JOIN Reviewer rev1 ON rev1.rid=r1) g
    INNER JOIN Reviewer rev2 ON rev2.rid=r2 WHERE nm1< rev2.name
ORDER BY nm1,
         rev2.name
----------------------------------------------------------------------------

For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars. 

SELECT name,
       title,
       stars
FROM Movie LEFT
NATURAL JOIN reviewer LEFT
NATURAL JOIN Rating
WHERE stars = 2
----------------------------------------------------------------------------

List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. 

SELECT title,
           avg(m80)
    FROM
        (SELECT title,
                stars AS m80
         FROM Movie,
              Rating
         WHERE Movie.mid=Rating.mid
         ORDER BY title)
GROUP BY title
ORDER BY avg(m80) DESC

----------------------------------------------------------------------------

Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.) 

SELECT name
FROM
    (SELECT rid AS r1,
            COUNT (*) AS counter
     FROM rating
     GROUP BY rid)
INNER JOIN Reviewer rev1 ON rev1.rid=r1
WHERE counter>2
----------------------------------------------------------------------------

Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with and without COUNT.) 

SELECT title,
           director
    FROM movie,
        (SELECT d1,
                movname
         FROM
             (SELECT title AS movname,
                     director AS d1,
                     COUNT (*) AS counter
              FROM movie
              GROUP BY director)
         WHERE counter>1)WHERE director=d1

----------------------------------------------------------------------------

For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. 

SELECT director,
           title,
           stahs
    FROM
        (SELECT mid AS movid,
                max(stars) AS stahs,
                COUNT (*) AS counter
         FROM rating
         GROUP BY mid), movie ON mid=movid WHERE director IS NOT NULL
GROUP BY director
ORDER BY director